/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define ALPHA       0
#define SYMBOL      1
#define NUMBER      2
#define NAVIGATION  3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <180>;
};

&lt {
    tapping_term_ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_bootloader {
            timeout-ms = <50>;
            key-positions = <1 10>;
            bindings = <&bootloader>;
        };

        compatible = "zmk,combos";
        combo_q {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp Q>;
        };

        compatible = "zmk,combos";
        combo_b {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp B>;
        };

        compatible = "zmk,combos";
        combo_j {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp J>;
        };

        compatible = "zmk,combos";
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };

        compatible = "zmk,combos";
        combo_v {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp V>;
        };

        compatible = "zmk,combos";
        combo_p {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp P>;
        };

        compatible = "zmk,combos";
        combo_k {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp K>;
        };

        compatible = "zmk,combos";
        combo_excl {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp EXCL>;
        };

        compatible = "zmk,combos";
        combo_z {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp Z>;
        };

        compatible = "zmk,combos";
        combo_x {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp X>;
        };

        compatible = "zmk,combos";
        combo_qmark {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp QMARK>;
        };
    };

    behaviors {
        bkt: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_bracket";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        brc: tap_dance_brace {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_braces";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        par: tap_dance_paren {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_paren";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        thn: tap_dance_then {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_then";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };

        hrm: homerow_mods {
           compatible = "zmk,behavior-hold-tap";
           label = "homerow_mods";
           #binding-cells = <2>;
           tapping-term-ms = <250>;
           quick-tap-ms = <0>;
           flavor = "tap-preferred";
           bindings = <&kp>, <&kp>;
        };

        tdW: tap_dance_W {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp W>, <&kp ESC>;
        };

        tdO: tap_dance_O {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp O>, <&kp COMMA>;
        };

        tdY: tap_dance_Y {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp Y>, <&kp DOT>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SYMBOL NUMBER>;
            then-layer = <NAVIGATION>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHA_layer {
// ---------------------------------------------------------------------------------------------------------------
// |   TAB   |    W   [Q]   F   [B]   G    |         |    X    |         |    M   [J]   L    |    U    |  BSPC   |
// |  SHIFT  |    A   [V]   R   [P]   S    |         |    X    |         |    N   [K]   E   [!]   I    |  DEL    |
// |  XXXX   |    C   [Z]   D   [X]   T    |         |    X    |         |    H   [,]   O   [.]   Y    |  XXXX   |
//                     |   Copy  |SPC/SHFT | RETURN  |    X    |   SPC   |SPC/ENT  |   Paste |
// ---------------------------------------------------------------------------------------------------------------
            bindings = <
                &kp TAB     &tdW   &kp F          &kp G        &none  &none     &kp M  &kp L  &kp U  &kp P
                &kp LSHIFT  &kp A  &kp R          &kp S        &none  &none     &kp G  &kp H  &kp J  &kp K
                &none       &kp C  &hrm LCTRL D   &hrm LALT T  &none  &none     &kp H  &tdO   &tdY   &kp SLASH
                         &kp LC(C)   &kp A           &none  &none     &kp B  &kp LC(V)
            >;
        };

        SYMBOL_layer {
            bindings = <
                &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS    &kp STAR    &kp PIPE    &none
                &kp GRAVE   &kp TILDE   &kp UNDER   &kp EQUAL   &none       &bkt        &brc        &par        &thn        &kp BSLH
                &none       &none       &kp PLUS    &kp MINUS   &none       &none       &none       &kp COLON   &trans     &kp SEMI
                                        &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };

        NUMBER_layer {
            bindings = <
                &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
                &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0
                &none       &none       &none       &none       &none       &none       &none       &none       &trans      &none
                                        &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };

        NAVIGATION_layer {
            bindings = <
                &none           &kp F2          &out OUT_USB    &out OUT_BLE    &bt BT_CLR      &none       &kp HOME    &kp UP      &kp END     &kp BSPC 
                &kp TAB         &none           &bt BT_SEL 0    &bt BT_SEL 1    &none           &none       &kp LEFT    &kp DOWN    &kp RIGHT   &kp RET
                &none           &none           &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &none       &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp DEL    
                                                &trans          &trans          &trans          &trans      &trans      &trans
            >;
        };
    };
};
